; ModuleID = 'bf_core.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-f128:128:128-n8:16:32:64"
target triple = "x86_64-apple-darwin8"

%struct.BF_KEY = type { [18 x i32], [1024 x i32] }

@bf_init = internal unnamed_addr constant %struct.BF_KEY { [18 x i32] [i32 608135816, i32 -2052912941, i32 320440878, i32 57701188, i32 -1542899678, i32 698298832, i32 137296536, i32 -330404727, i32 1160258022, i32 953160567, i32 -1101764913, i32 887688300, i32 -1062458953, i32 -914599715, i32 1065670069, i32 -1253635817, i32 -1843997223, i32 -1988494565], [1024 x i32] [i32 -785314906, i32 -1730169428, i32 805139163, i32 -803545161, i32 -1193168915, i32 1780907670, i32 -1166241723, i32 -248741991, i32 614570311, i32 -1282315017, i32 134345442, i32 -2054226922, i32 1667834072, i32 1901547113, i32 -1537671517, i32 -191677058, i32 227898511, i32 1921955416, i32 1904987480, i32 -2112533778, i32 2069144605, i32 -1034266187, i32 -1674521287, i32 720527379, i32 -976113629, i32 677414384, i32 -901678824, i32 -1193592593, i32 -1904616272, i32 1614419982, i32 1822297739, i32 -1340175810, i32 -686458943, i32 -1120842969, i32 2024746970, i32 1432378464, i32 -430627341, i32 -1437226092, i32 1464375394, i32 1676153920, i32 1439316330, i32 715854006, i32 -1261675468, i32 289532110, i32 -1588296017, i32 2087905683, i32 -1276242927, i32 1668267050, i32 732546397, i32 1947742710, i32 -832815594, i32 -1685613794, i32 -1344882125, i32 1814351708, i32 2050118529, i32 680887927, i32 999245976, i32 1800124847, i32 -994056165, i32 1713906067, i32 1641548236, i32 -81679983, i32 1216130144, i32 1575780402, i32 -276538019, i32 -377129551, i32 -601480446, i32 -345695352, i32 596196993, i32 -745100091, i32 258830323, i32 -2081144263, i32 772490370, i32 -1534844924, i32 1774776394, i32 -1642095778, i32 566650946, i32 -152474470, i32 1728879713, i32 -1412200208, i32 1783734482, i32 -665571480, i32 -1777359064, i32 -1420741725, i32 1861159788, i32 326777828, i32 -1170476976, i32 2130389656, i32 -1578015459, i32 967770486, i32 1724537150, i32 -2109534584, i32 -1930525159, i32 1164943284, i32 2105845187, i32 998989502, i32 -529566248, i32 -2050940813, i32 1075463327, i32 1455516326, i32 1322494562, i32 910128902, i32 469688178, i32 1117454909, i32 936433444, i32 -804646328, i32 -619713837, i32 1240580251, i32 122909385, i32 -2137449605, i32 634681816, i32 -152510729, i32 -469872614, i32 -1233564613, i32 -1754472259, i32 79693498, i32 -1045868618, i32 1084186820, i32 1583128258, i32 426386531, i32 1761308591, i32 1047286709, i32 322548459, i32 995290223, i32 1845252383, i32 -1691314900, i32 -863943356, i32 -1352745719, i32 -1092366332, i32 -567063811, i32 1712269319, i32 422464435, i32 -1060394921, i32 1170764815, i32 -771006663, i32 -1177289765, i32 1434042557, i32 442511882, i32 -694091578, i32 1076654713, i32 1738483198, i32 -81812532, i32 -1901729288, i32 -617471240, i32 1014306527, i32 -43947243, i32 793779912, i32 -1392160085, i32 842905082, i32 -48003232, i32 1395751752, i32 1040244610, i32 -1638115397, i32 -898659168, i32 445077038, i32 -552113701, i32 -717051658, i32 679411651, i32 -1402522938, i32 -1940957837, i32 1767581616, i32 -1144366904, i32 -503340195, i32 -1192226400, i32 284835224, i32 -48135240, i32 1258075500, i32 768725851, i32 -1705778055, i32 -1225243291, i32 -762426948, i32 1274779536, i32 -505548070, i32 -1530167757, i32 1660621633, i32 -823867672, i32 -283063590, i32 913787905, i32 -797008130, i32 737222580, i32 -1780753843, i32 -1366257256, i32 -357724559, i32 1804850592, i32 -795946544, i32 -1345903136, i32 -1908647121, i32 -1904896841, i32 -1879645445, i32 -233690268, i32 -2004305902, i32 -1878134756, i32 1336762016, i32 1754252060, i32 -774901359, i32 -1280786003, i32 791618072, i32 -1106372745, i32 -361419266, i32 -1962795103, i32 -442446833, i32 -1250986776, i32 413987798, i32 -829824359, i32 -1264037920, i32 -49028937, i32 2093235073, i32 -760370983, i32 375366246, i32 -2137688315, i32 -1815317740, i32 555357303, i32 -424861595, i32 2008414854, i32 -950779147, i32 -73583153, i32 -338841844, i32 2067696032, i32 -700376109, i32 -1373733303, i32 2428461, i32 544322398, i32 577241275, i32 1471733935, i32 610547355, i32 -267798242, i32 1432588573, i32 1507829418, i32 2025931657, i32 -648391809, i32 545086370, i32 48609733, i32 -2094660746, i32 1653985193, i32 298326376, i32 1316178497, i32 -1287180854, i32 2064951626, i32 458293330, i32 -1705826027, i32 -703637697, i32 -1130641692, i32 727753846, i32 -2115603456, i32 146436021, i32 1461446943, i32 -224990101, i32 705550613, i32 -1235000031, i32 -407242314, i32 -13368018, i32 -981117340, i32 1404054877, i32 -1449160799, i32 146425753, i32 1854211946, i32 1266315497, i32 -1246549692, i32 -613086930, i32 -1004984797, i32 -1385257296, i32 1235738493, i32 -1662099272, i32 -1880247706, i32 -324367247, i32 1771706367, i32 1449415276, i32 -1028546847, i32 422970021, i32 1963543593, i32 -1604775104, i32 -468174274, i32 1062508698, i32 1531092325, i32 1804592342, i32 -1711849514, i32 -1580033017, i32 -269995787, i32 1294809318, i32 -265986623, i32 1289560198, i32 -2072974554, i32 1669523910, i32 35572830, i32 157838143, i32 1052438473, i32 1016535060, i32 1802137761, i32 1753167236, i32 1386275462, i32 -1214491899, i32 -1437595849, i32 1040679964, i32 2145300060, i32 -1904392980, i32 1461121720, i32 -1338320329, i32 -263189491, i32 -266592508, i32 33600511, i32 -1374882534, i32 1018524850, i32 629373528, i32 -603381315, i32 -779021319, i32 2091462646, i32 -1808644237, i32 586499841, i32 988145025, i32 935516892, i32 -927631820, i32 -1695294041, i32 -1455136442, i32 265290510, i32 -322386114, i32 -1535828415, i32 -499593831, i32 1005194799, i32 847297441, i32 406762289, i32 1314163512, i32 1332590856, i32 1866599683, i32 -167115585, i32 750260880, i32 613907577, i32 1450815602, i32 -1129346641, i32 -560302305, i32 -644675568, i32 -1282691566, i32 -590397650, i32 1427272223, i32 778793252, i32 1343938022, i32 -1618686585, i32 2052605720, i32 1946737175, i32 -1130390852, i32 -380928628, i32 -327488454, i32 -612033030, i32 1661551462, i32 -1000029230, i32 -283371449, i32 840292616, i32 -582796489, i32 616741398, i32 312560963, i32 711312465, i32 1351876610, i32 322626781, i32 1910503582, i32 271666773, i32 -2119403562, i32 1594956187, i32 70604529, i32 -677132437, i32 1007753275, i32 1495573769, i32 -225450259, i32 -1745748998, i32 -1631928532, i32 504708206, i32 -2031925904, i32 -353800271, i32 -2045878774, i32 1514023603, i32 1998579484, i32 1312622330, i32 694541497, i32 -1712906993, i32 -2143385130, i32 1382467621, i32 776784248, i32 -1676627094, i32 -971698502, i32 -1797068168, i32 -1510196141, i32 503983604, i32 -218673497, i32 907881277, i32 423175695, i32 432175456, i32 1378068232, i32 -149744970, i32 -340918674, i32 -356311194, i32 -474200683, i32 -1501837181, i32 -1317062703, i32 26017576, i32 -1020076561, i32 -1100195163, i32 1700274565, i32 1756076034, i32 -288447217, i32 -617638597, i32 720338349, i32 1533947780, i32 354530856, i32 688349552, i32 -321042571, i32 1637815568, i32 332179504, i32 -345916010, i32 53804574, i32 -1442618417, i32 -1250730864, i32 1282449977, i32 -711025141, i32 -877994476, i32 -288586052, i32 1617046695, i32 -1666491221, i32 -1292663698, i32 1686838959, i32 431878346, i32 -1608291911, i32 1700445008, i32 1080580658, i32 1009431731, i32 832498133, i32 -1071531785, i32 -1688990951, i32 -2023776103, i32 -1778935426, i32 1648197032, i32 -130578278, i32 -1746719369, i32 300782431, i32 375919233, i32 238389289, i32 -941219882, i32 -1763778655, i32 2019080857, i32 1475708069, i32 455242339, i32 -1685863425, i32 448939670, i32 -843904277, i32 1395535956, i32 -1881585436, i32 1841049896, i32 1491858159, i32 885456874, i32 -30872223, i32 -293847949, i32 1565136089, i32 -396052509, i32 1108368660, i32 540939232, i32 1173283510, i32 -1549095958, i32 -613658859, i32 -87339056, i32 -951913406, i32 -278217803, i32 1699691293, i32 1103962373, i32 -669091426, i32 -2038084153, i32 -464828566, i32 1031889488, i32 -815619598, i32 1535977030, i32 -58162272, i32 -1043876189, i32 2132092099, i32 1774941330, i32 1199868427, i32 1452454533, i32 157007616, i32 -1390851939, i32 342012276, i32 595725824, i32 1480756522, i32 206960106, i32 497939518, i32 591360097, i32 863170706, i32 -1919713727, i32 -698356495, i32 1814182875, i32 2094937945, i32 -873565088, i32 1082520231, i32 -831049106, i32 -1509457788, i32 435703966, i32 -386934699, i32 1641649973, i32 -1452693590, i32 -989067582, i32 1510255612, i32 -2146710820, i32 -1639679442, i32 -1018874748, i32 -36346107, i32 236887753, i32 -613164077, i32 274041037, i32 1734335097, i32 -479771840, i32 -976997275, i32 1899903192, i32 1026095262, i32 -244449504, i32 356393447, i32 -1884275382, i32 -421290197, i32 -612127241, i32 -381855128, i32 -1803468553, i32 -162781668, i32 -1805047500, i32 1091903735, i32 1979897079, i32 -1124832466, i32 -727580568, i32 -737663887, i32 857797738, i32 1136121015, i32 1342202287, i32 507115054, i32 -1759230650, i32 337727348, i32 -1081374656, i32 1301675037, i32 -1766485585, i32 1895095763, i32 1721773893, i32 -1078195732, i32 62756741, i32 2142006736, i32 835421444, i32 -1762973773, i32 1442658625, i32 -635090970, i32 -1412822374, i32 676362277, i32 1392781812, i32 170690266, i32 -373920261, i32 1759253602, i32 -683120384, i32 1745797284, i32 664899054, i32 1329594018, i32 -393761396, i32 -1249058810, i32 2062866102, i32 -1429332356, i32 -751345684, i32 -830954599, i32 1080764994, i32 553557557, i32 -638351943, i32 -298199125, i32 991055499, i32 499776247, i32 1265440854, i32 648242737, i32 -354183246, i32 980351604, i32 -581221582, i32 1749149687, i32 -898096901, i32 -83167922, i32 -654396521, i32 1161844396, i32 -1169648345, i32 1431517754, i32 545492359, i32 -26498633, i32 -795437749, i32 1437099964, i32 -1592419752, i32 -861329053, i32 -1713251533, i32 -1507177898, i32 1060185593, i32 1593081372, i32 -1876348548, i32 -34019326, i32 69676912, i32 -2135222948, i32 86519011, i32 -1782508216, i32 -456757982, i32 1220612927, i32 -955283748, i32 133810670, i32 1090789135, i32 1078426020, i32 1569222167, i32 845107691, i32 -711212847, i32 -222510705, i32 1091646820, i32 628848692, i32 1613405280, i32 -537335645, i32 526609435, i32 236106946, i32 48312990, i32 -1352249391, i32 -892239595, i32 1797494240, i32 859738849, i32 992217954, i32 -289490654, i32 -2051890674, i32 -424014439, i32 -562951028, i32 765654824, i32 -804095931, i32 -1783130883, i32 1685915746, i32 -405998096, i32 1414112111, i32 -2021832454, i32 -1013056217, i32 -214004450, i32 172450625, i32 -1724973196, i32 980381355, i32 -185008841, i32 -1475158944, i32 -1578377736, i32 -1726226100, i32 -613520627, i32 -964995824, i32 1835478071, i32 660984891, i32 -590288892, i32 -248967737, i32 -872349789, i32 -1254551662, i32 1762651403, i32 1719377915, i32 -824476260, i32 -1601057013, i32 -652910941, i32 -1156370552, i32 1364962596, i32 2073328063, i32 1983633131, i32 926494387, i32 -871278215, i32 -2144935273, i32 -198299347, i32 1749200295, i32 -966120645, i32 309677260, i32 2016342300, i32 1779581495, i32 -1215147545, i32 111262694, i32 1274766160, i32 443224088, i32 298511866, i32 1025883608, i32 -488520759, i32 1145181785, i32 168956806, i32 -653464466, i32 -710153686, i32 1689216846, i32 -628709281, i32 -1094719096, i32 1692713982, i32 -1648590761, i32 -252198778, i32 1618508792, i32 1610833997, i32 -771914938, i32 -164094032, i32 2001055236, i32 -684262196, i32 -2092799181, i32 -266425487, i32 -1333771897, i32 1006657119, i32 2006996926, i32 -1108824540, i32 1430667929, i32 -1084739999, i32 1314452623, i32 -220332638, i32 -193663176, i32 -2021016126, i32 1399257539, i32 -927756684, i32 -1267338667, i32 1190975929, i32 2062231137, i32 -1960976508, i32 -2073424263, i32 -1856006686, i32 1181637006, i32 548689776, i32 -1932175983, i32 -922558900, i32 -1190417183, i32 -1149106736, i32 296247880, i32 1970579870, i32 -1216407114, i32 -525738999, i32 1714227617, i32 -1003338189, i32 -396747006, i32 166772364, i32 1251581989, i32 493813264, i32 448347421, i32 195405023, i32 -1584991729, i32 677966185, i32 -591930749, i32 1463355134, i32 -1578971493, i32 1338867538, i32 1343315457, i32 -1492745222, i32 -1610435132, i32 233230375, i32 -1694987225, i32 2000651841, i32 -1017099258, i32 1638401717, i32 -266896856, i32 -1057650976, i32 6314154, i32 819756386, i32 300326615, i32 590932579, i32 1405279636, i32 -1027467724, i32 -1144263082, i32 -1866680610, i32 -335774303, i32 -833020554, i32 1862657033, i32 1266418056, i32 963775037, i32 2089974820, i32 -2031914401, i32 1917689273, i32 448879540, i32 -744572676, i32 -313240200, i32 150775221, i32 -667058989, i32 1303187396, i32 508620638, i32 -1318983944, i32 -1568336679, i32 1817252668, i32 1876281319, i32 1457606340, i32 908771278, i32 -574175177, i32 -677760460, i32 -1838972398, i32 1729034894, i32 1080033504, i32 976866871, i32 -738527793, i32 -1413318857, i32 1522871579, i32 1555064734, i32 1336096578, i32 -746444992, i32 -1715692610, i32 -720269667, i32 -1089506539, i32 -701686658, i32 -956251013, i32 -1215554709, i32 564236357, i32 -1301368386, i32 1781952180, i32 1464380207, i32 -1131123079, i32 -962365742, i32 1699332808, i32 1393555694, i32 1183702653, i32 -713881059, i32 1288719814, i32 691649499, i32 -1447410096, i32 -1399511320, i32 -1101077756, i32 -1577396752, i32 1781354906, i32 1676643554, i32 -1702433246, i32 -1064713544, i32 1126444790, i32 -1524759638, i32 -1661808476, i32 -2084544070, i32 -1679201715, i32 -1880812208, i32 -1167828010, i32 673620729, i32 -1489356063, i32 1269405062, i32 -279616791, i32 -953159725, i32 -145557542, i32 1057255273, i32 2012875353, i32 -2132498155, i32 -2018474495, i32 -1693849939, i32 993977747, i32 -376373926, i32 -1640704105, i32 753973209, i32 36408145, i32 -1764381638, i32 25011837, i32 -774947114, i32 2088578344, i32 530523599, i32 -1376601957, i32 1524020338, i32 1518925132, i32 -534139791, i32 -535190042, i32 1202760957, i32 -309069157, i32 -388774771, i32 674977740, i32 -120232407, i32 2031300136, i32 2019492241, i32 -311074731, i32 -141160892, i32 -472686964, i32 352677332, i32 -1997247046, i32 60907813, i32 90501309, i32 -1007968747, i32 1016092578, i32 -1759044884, i32 -1455814870, i32 457141659, i32 509813237, i32 -174299397, i32 652014361, i32 1966332200, i32 -1319764491, i32 55981186, i32 -1967506245, i32 676427537, i32 -1039476232, i32 -1412673177, i32 -861040033, i32 1307055953, i32 942726286, i32 933058658, i32 -1826555503, i32 -361066302, i32 -79791154, i32 1361170020, i32 2001714738, i32 -1464409218, i32 -1020707514, i32 1222529897, i32 1679025792, i32 -1565652976, i32 -580013532, i32 1770335741, i32 151462246, i32 -1281735158, i32 1682292957, i32 1483529935, i32 471910574, i32 1539241949, i32 458788160, i32 -858652289, i32 1807016891, i32 -576558466, i32 978976581, i32 1043663428, i32 -1129001515, i32 1927990952, i32 -94075717, i32 -1922690386, i32 -1086558393, i32 -761535389, i32 1412390302, i32 -1362987237, i32 -162634896, i32 1947078029, i32 -413461673, i32 -126740879, i32 -1353482915, i32 1077988104, i32 1320477388, i32 886195818, i32 18198404, i32 -508558296, i32 -1785185763, i32 112762804, i32 -831610808, i32 1866414978, i32 891333506, i32 18488651, i32 661792760, i32 1628790961, i32 -409780260, i32 -1153795797, i32 876946877, i32 -1601685023, i32 1372485963, i32 791857591, i32 -1608533303, i32 -534984578, i32 -1127755274, i32 -822013501, i32 -1578587449, i32 445679433, i32 -732971622, i32 -790962485, i32 -720709064, i32 54117162, i32 -963561881, i32 -1913048708, i32 -525259953, i32 -140617289, i32 1140177722, i32 -220915201, i32 668550556, i32 -1080614356, i32 367459370, i32 261225585, i32 -1684794075, i32 -85617823, i32 -826893077, i32 -1029151655, i32 314222801, i32 -1228863650, i32 -486184436, i32 282218597, i32 -888953790, i32 -521376242, i32 379116347, i32 1285071038, i32 846784868, i32 -1625320142, i32 -523005217, i32 -744475605, i32 -1989021154, i32 453669953, i32 1268987020, i32 -977374944, i32 -1015663912, i32 -550133875, i32 -1684459730, i32 -435458233, i32 266596637, i32 -447948204, i32 517658769, i32 -832407089, i32 -851542417, i32 370717030, i32 -47440635, i32 -2070949179, i32 -151313767, i32 -182193321, i32 -1506642397, i32 -1817692879, i32 1456262402, i32 -1393524382, i32 1517677493, i32 1846949527, i32 -1999473716, i32 -560569710, i32 -2118563376, i32 1280348187, i32 1908823572, i32 -423180355, i32 846861322, i32 1172426758, i32 -1007518822, i32 -911584259, i32 1655181056, i32 -1155153950, i32 901632758, i32 1897031941, i32 -1308360158, i32 -1228157060, i32 -847864789, i32 1393639104, i32 373351379, i32 950779232, i32 625454576, i32 -1170726756, i32 -146354570, i32 2007998917, i32 544563296, i32 -2050228658, i32 -1964470824, i32 2058025392, i32 1291430526, i32 424198748, i32 50039436, i32 29584100, i32 -689184263, i32 -1865090967, i32 -1503863136, i32 1057563949, i32 -1039604065, i32 -1219600078, i32 -831004069, i32 1469046755, i32 985887462] }, align 32

define void @BF_encrypt(i32* nocapture %data, %struct.BF_KEY* %key) nounwind {
entry:
  %0 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 0
  %1 = load i32* %data, align 4
  %2 = getelementptr inbounds i32* %data, i64 1
  %3 = load i32* %2, align 4
  %4 = load i32* %0, align 4
  %5 = xor i32 %4, %1
  %6 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 1
  %7 = load i32* %6, align 4
  %8 = lshr i32 %5, 24
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %9
  %11 = load i32* %10, align 4
  %12 = lshr i32 %5, 16
  %13 = and i32 %12, 255
  %14 = or i32 %13, 256
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %15
  %17 = load i32* %16, align 4
  %18 = add i32 %17, %11
  %19 = lshr i32 %5, 8
  %20 = and i32 %19, 255
  %21 = or i32 %20, 512
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %22
  %24 = load i32* %23, align 4
  %25 = xor i32 %18, %24
  %26 = and i32 %5, 255
  %27 = or i32 %26, 768
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %28
  %30 = load i32* %29, align 4
  %31 = add i32 %25, %30
  %32 = xor i32 %7, %3
  %33 = xor i32 %32, %31
  %34 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 2
  %35 = load i32* %34, align 4
  %36 = lshr i32 %33, 24
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %37
  %39 = load i32* %38, align 4
  %40 = lshr i32 %33, 16
  %41 = and i32 %40, 255
  %42 = or i32 %41, 256
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %43
  %45 = load i32* %44, align 4
  %46 = add i32 %45, %39
  %47 = lshr i32 %33, 8
  %48 = and i32 %47, 255
  %49 = or i32 %48, 512
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %50
  %52 = load i32* %51, align 4
  %53 = xor i32 %46, %52
  %54 = and i32 %33, 255
  %55 = or i32 %54, 768
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %56
  %58 = load i32* %57, align 4
  %59 = add i32 %53, %58
  %60 = xor i32 %35, %5
  %61 = xor i32 %60, %59
  %62 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 3
  %63 = load i32* %62, align 4
  %64 = lshr i32 %61, 24
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %65
  %67 = load i32* %66, align 4
  %68 = lshr i32 %61, 16
  %69 = and i32 %68, 255
  %70 = or i32 %69, 256
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %71
  %73 = load i32* %72, align 4
  %74 = add i32 %73, %67
  %75 = lshr i32 %61, 8
  %76 = and i32 %75, 255
  %77 = or i32 %76, 512
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %78
  %80 = load i32* %79, align 4
  %81 = xor i32 %74, %80
  %82 = and i32 %61, 255
  %83 = or i32 %82, 768
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %84
  %86 = load i32* %85, align 4
  %87 = add i32 %81, %86
  %88 = xor i32 %63, %33
  %89 = xor i32 %88, %87
  %90 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 4
  %91 = load i32* %90, align 4
  %92 = lshr i32 %89, 24
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %93
  %95 = load i32* %94, align 4
  %96 = lshr i32 %89, 16
  %97 = and i32 %96, 255
  %98 = or i32 %97, 256
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %99
  %101 = load i32* %100, align 4
  %102 = add i32 %101, %95
  %103 = lshr i32 %89, 8
  %104 = and i32 %103, 255
  %105 = or i32 %104, 512
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %106
  %108 = load i32* %107, align 4
  %109 = xor i32 %102, %108
  %110 = and i32 %89, 255
  %111 = or i32 %110, 768
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %112
  %114 = load i32* %113, align 4
  %115 = add i32 %109, %114
  %116 = xor i32 %91, %61
  %117 = xor i32 %116, %115
  %118 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 5
  %119 = load i32* %118, align 4
  %120 = lshr i32 %117, 24
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %121
  %123 = load i32* %122, align 4
  %124 = lshr i32 %117, 16
  %125 = and i32 %124, 255
  %126 = or i32 %125, 256
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %127
  %129 = load i32* %128, align 4
  %130 = add i32 %129, %123
  %131 = lshr i32 %117, 8
  %132 = and i32 %131, 255
  %133 = or i32 %132, 512
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %134
  %136 = load i32* %135, align 4
  %137 = xor i32 %130, %136
  %138 = and i32 %117, 255
  %139 = or i32 %138, 768
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %140
  %142 = load i32* %141, align 4
  %143 = add i32 %137, %142
  %144 = xor i32 %119, %89
  %145 = xor i32 %144, %143
  %146 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 6
  %147 = load i32* %146, align 4
  %148 = lshr i32 %145, 24
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %149
  %151 = load i32* %150, align 4
  %152 = lshr i32 %145, 16
  %153 = and i32 %152, 255
  %154 = or i32 %153, 256
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %155
  %157 = load i32* %156, align 4
  %158 = add i32 %157, %151
  %159 = lshr i32 %145, 8
  %160 = and i32 %159, 255
  %161 = or i32 %160, 512
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %162
  %164 = load i32* %163, align 4
  %165 = xor i32 %158, %164
  %166 = and i32 %145, 255
  %167 = or i32 %166, 768
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %168
  %170 = load i32* %169, align 4
  %171 = add i32 %165, %170
  %172 = xor i32 %147, %117
  %173 = xor i32 %172, %171
  %174 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 7
  %175 = load i32* %174, align 4
  %176 = lshr i32 %173, 24
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %177
  %179 = load i32* %178, align 4
  %180 = lshr i32 %173, 16
  %181 = and i32 %180, 255
  %182 = or i32 %181, 256
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %183
  %185 = load i32* %184, align 4
  %186 = add i32 %185, %179
  %187 = lshr i32 %173, 8
  %188 = and i32 %187, 255
  %189 = or i32 %188, 512
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %190
  %192 = load i32* %191, align 4
  %193 = xor i32 %186, %192
  %194 = and i32 %173, 255
  %195 = or i32 %194, 768
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %196
  %198 = load i32* %197, align 4
  %199 = add i32 %193, %198
  %200 = xor i32 %175, %145
  %201 = xor i32 %200, %199
  %202 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 8
  %203 = load i32* %202, align 4
  %204 = lshr i32 %201, 24
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %205
  %207 = load i32* %206, align 4
  %208 = lshr i32 %201, 16
  %209 = and i32 %208, 255
  %210 = or i32 %209, 256
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %211
  %213 = load i32* %212, align 4
  %214 = add i32 %213, %207
  %215 = lshr i32 %201, 8
  %216 = and i32 %215, 255
  %217 = or i32 %216, 512
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %218
  %220 = load i32* %219, align 4
  %221 = xor i32 %214, %220
  %222 = and i32 %201, 255
  %223 = or i32 %222, 768
  %224 = zext i32 %223 to i64
  %225 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %224
  %226 = load i32* %225, align 4
  %227 = add i32 %221, %226
  %228 = xor i32 %203, %173
  %229 = xor i32 %228, %227
  %230 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 9
  %231 = load i32* %230, align 4
  %232 = lshr i32 %229, 24
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %233
  %235 = load i32* %234, align 4
  %236 = lshr i32 %229, 16
  %237 = and i32 %236, 255
  %238 = or i32 %237, 256
  %239 = zext i32 %238 to i64
  %240 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %239
  %241 = load i32* %240, align 4
  %242 = add i32 %241, %235
  %243 = lshr i32 %229, 8
  %244 = and i32 %243, 255
  %245 = or i32 %244, 512
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %246
  %248 = load i32* %247, align 4
  %249 = xor i32 %242, %248
  %250 = and i32 %229, 255
  %251 = or i32 %250, 768
  %252 = zext i32 %251 to i64
  %253 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %252
  %254 = load i32* %253, align 4
  %255 = add i32 %249, %254
  %256 = xor i32 %231, %201
  %257 = xor i32 %256, %255
  %258 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 10
  %259 = load i32* %258, align 4
  %260 = lshr i32 %257, 24
  %261 = zext i32 %260 to i64
  %262 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %261
  %263 = load i32* %262, align 4
  %264 = lshr i32 %257, 16
  %265 = and i32 %264, 255
  %266 = or i32 %265, 256
  %267 = zext i32 %266 to i64
  %268 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %267
  %269 = load i32* %268, align 4
  %270 = add i32 %269, %263
  %271 = lshr i32 %257, 8
  %272 = and i32 %271, 255
  %273 = or i32 %272, 512
  %274 = zext i32 %273 to i64
  %275 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %274
  %276 = load i32* %275, align 4
  %277 = xor i32 %270, %276
  %278 = and i32 %257, 255
  %279 = or i32 %278, 768
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %280
  %282 = load i32* %281, align 4
  %283 = add i32 %277, %282
  %284 = xor i32 %259, %229
  %285 = xor i32 %284, %283
  %286 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 11
  %287 = load i32* %286, align 4
  %288 = lshr i32 %285, 24
  %289 = zext i32 %288 to i64
  %290 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %289
  %291 = load i32* %290, align 4
  %292 = lshr i32 %285, 16
  %293 = and i32 %292, 255
  %294 = or i32 %293, 256
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %295
  %297 = load i32* %296, align 4
  %298 = add i32 %297, %291
  %299 = lshr i32 %285, 8
  %300 = and i32 %299, 255
  %301 = or i32 %300, 512
  %302 = zext i32 %301 to i64
  %303 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %302
  %304 = load i32* %303, align 4
  %305 = xor i32 %298, %304
  %306 = and i32 %285, 255
  %307 = or i32 %306, 768
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %308
  %310 = load i32* %309, align 4
  %311 = add i32 %305, %310
  %312 = xor i32 %287, %257
  %313 = xor i32 %312, %311
  %314 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 12
  %315 = load i32* %314, align 4
  %316 = lshr i32 %313, 24
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %317
  %319 = load i32* %318, align 4
  %320 = lshr i32 %313, 16
  %321 = and i32 %320, 255
  %322 = or i32 %321, 256
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %323
  %325 = load i32* %324, align 4
  %326 = add i32 %325, %319
  %327 = lshr i32 %313, 8
  %328 = and i32 %327, 255
  %329 = or i32 %328, 512
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %330
  %332 = load i32* %331, align 4
  %333 = xor i32 %326, %332
  %334 = and i32 %313, 255
  %335 = or i32 %334, 768
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %336
  %338 = load i32* %337, align 4
  %339 = add i32 %333, %338
  %340 = xor i32 %315, %285
  %341 = xor i32 %340, %339
  %342 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 13
  %343 = load i32* %342, align 4
  %344 = lshr i32 %341, 24
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %345
  %347 = load i32* %346, align 4
  %348 = lshr i32 %341, 16
  %349 = and i32 %348, 255
  %350 = or i32 %349, 256
  %351 = zext i32 %350 to i64
  %352 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %351
  %353 = load i32* %352, align 4
  %354 = add i32 %353, %347
  %355 = lshr i32 %341, 8
  %356 = and i32 %355, 255
  %357 = or i32 %356, 512
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %358
  %360 = load i32* %359, align 4
  %361 = xor i32 %354, %360
  %362 = and i32 %341, 255
  %363 = or i32 %362, 768
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %364
  %366 = load i32* %365, align 4
  %367 = add i32 %361, %366
  %368 = xor i32 %343, %313
  %369 = xor i32 %368, %367
  %370 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 14
  %371 = load i32* %370, align 4
  %372 = lshr i32 %369, 24
  %373 = zext i32 %372 to i64
  %374 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %373
  %375 = load i32* %374, align 4
  %376 = lshr i32 %369, 16
  %377 = and i32 %376, 255
  %378 = or i32 %377, 256
  %379 = zext i32 %378 to i64
  %380 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %379
  %381 = load i32* %380, align 4
  %382 = add i32 %381, %375
  %383 = lshr i32 %369, 8
  %384 = and i32 %383, 255
  %385 = or i32 %384, 512
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %386
  %388 = load i32* %387, align 4
  %389 = xor i32 %382, %388
  %390 = and i32 %369, 255
  %391 = or i32 %390, 768
  %392 = zext i32 %391 to i64
  %393 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %392
  %394 = load i32* %393, align 4
  %395 = add i32 %389, %394
  %396 = xor i32 %371, %341
  %397 = xor i32 %396, %395
  %398 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 15
  %399 = load i32* %398, align 4
  %400 = lshr i32 %397, 24
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %401
  %403 = load i32* %402, align 4
  %404 = lshr i32 %397, 16
  %405 = and i32 %404, 255
  %406 = or i32 %405, 256
  %407 = zext i32 %406 to i64
  %408 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %407
  %409 = load i32* %408, align 4
  %410 = add i32 %409, %403
  %411 = lshr i32 %397, 8
  %412 = and i32 %411, 255
  %413 = or i32 %412, 512
  %414 = zext i32 %413 to i64
  %415 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %414
  %416 = load i32* %415, align 4
  %417 = xor i32 %410, %416
  %418 = and i32 %397, 255
  %419 = or i32 %418, 768
  %420 = zext i32 %419 to i64
  %421 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %420
  %422 = load i32* %421, align 4
  %423 = add i32 %417, %422
  %424 = xor i32 %399, %369
  %425 = xor i32 %424, %423
  %426 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 16
  %427 = load i32* %426, align 4
  %428 = lshr i32 %425, 24
  %429 = zext i32 %428 to i64
  %430 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %429
  %431 = load i32* %430, align 4
  %432 = lshr i32 %425, 16
  %433 = and i32 %432, 255
  %434 = or i32 %433, 256
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %435
  %437 = load i32* %436, align 4
  %438 = add i32 %437, %431
  %439 = lshr i32 %425, 8
  %440 = and i32 %439, 255
  %441 = or i32 %440, 512
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %442
  %444 = load i32* %443, align 4
  %445 = xor i32 %438, %444
  %446 = and i32 %425, 255
  %447 = or i32 %446, 768
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %448
  %450 = load i32* %449, align 4
  %451 = add i32 %445, %450
  %452 = xor i32 %427, %397
  %453 = xor i32 %452, %451
  %454 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 17
  %455 = load i32* %454, align 4
  %456 = xor i32 %455, %425
  store i32 %453, i32* %2, align 4
  store i32 %456, i32* %data, align 4
  ret void
}

define void @BF_decrypt(i32* nocapture %data, %struct.BF_KEY* %key) nounwind {
entry:
  %0 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 0
  %1 = load i32* %data, align 4
  %2 = getelementptr inbounds i32* %data, i64 1
  %3 = load i32* %2, align 4
  %4 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 17
  %5 = load i32* %4, align 4
  %6 = xor i32 %5, %1
  %7 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 16
  %8 = load i32* %7, align 4
  %9 = lshr i32 %6, 24
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %10
  %12 = load i32* %11, align 4
  %13 = lshr i32 %6, 16
  %14 = and i32 %13, 255
  %15 = or i32 %14, 256
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %16
  %18 = load i32* %17, align 4
  %19 = add i32 %18, %12
  %20 = lshr i32 %6, 8
  %21 = and i32 %20, 255
  %22 = or i32 %21, 512
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %23
  %25 = load i32* %24, align 4
  %26 = xor i32 %19, %25
  %27 = and i32 %6, 255
  %28 = or i32 %27, 768
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %29
  %31 = load i32* %30, align 4
  %32 = add i32 %26, %31
  %33 = xor i32 %8, %3
  %34 = xor i32 %33, %32
  %35 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 15
  %36 = load i32* %35, align 4
  %37 = lshr i32 %34, 24
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %38
  %40 = load i32* %39, align 4
  %41 = lshr i32 %34, 16
  %42 = and i32 %41, 255
  %43 = or i32 %42, 256
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %44
  %46 = load i32* %45, align 4
  %47 = add i32 %46, %40
  %48 = lshr i32 %34, 8
  %49 = and i32 %48, 255
  %50 = or i32 %49, 512
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %51
  %53 = load i32* %52, align 4
  %54 = xor i32 %47, %53
  %55 = and i32 %34, 255
  %56 = or i32 %55, 768
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %57
  %59 = load i32* %58, align 4
  %60 = add i32 %54, %59
  %61 = xor i32 %36, %6
  %62 = xor i32 %61, %60
  %63 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 14
  %64 = load i32* %63, align 4
  %65 = lshr i32 %62, 24
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %66
  %68 = load i32* %67, align 4
  %69 = lshr i32 %62, 16
  %70 = and i32 %69, 255
  %71 = or i32 %70, 256
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %72
  %74 = load i32* %73, align 4
  %75 = add i32 %74, %68
  %76 = lshr i32 %62, 8
  %77 = and i32 %76, 255
  %78 = or i32 %77, 512
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %79
  %81 = load i32* %80, align 4
  %82 = xor i32 %75, %81
  %83 = and i32 %62, 255
  %84 = or i32 %83, 768
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %85
  %87 = load i32* %86, align 4
  %88 = add i32 %82, %87
  %89 = xor i32 %64, %34
  %90 = xor i32 %89, %88
  %91 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 13
  %92 = load i32* %91, align 4
  %93 = lshr i32 %90, 24
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %94
  %96 = load i32* %95, align 4
  %97 = lshr i32 %90, 16
  %98 = and i32 %97, 255
  %99 = or i32 %98, 256
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %100
  %102 = load i32* %101, align 4
  %103 = add i32 %102, %96
  %104 = lshr i32 %90, 8
  %105 = and i32 %104, 255
  %106 = or i32 %105, 512
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %107
  %109 = load i32* %108, align 4
  %110 = xor i32 %103, %109
  %111 = and i32 %90, 255
  %112 = or i32 %111, 768
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %113
  %115 = load i32* %114, align 4
  %116 = add i32 %110, %115
  %117 = xor i32 %92, %62
  %118 = xor i32 %117, %116
  %119 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 12
  %120 = load i32* %119, align 4
  %121 = lshr i32 %118, 24
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %122
  %124 = load i32* %123, align 4
  %125 = lshr i32 %118, 16
  %126 = and i32 %125, 255
  %127 = or i32 %126, 256
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %128
  %130 = load i32* %129, align 4
  %131 = add i32 %130, %124
  %132 = lshr i32 %118, 8
  %133 = and i32 %132, 255
  %134 = or i32 %133, 512
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %135
  %137 = load i32* %136, align 4
  %138 = xor i32 %131, %137
  %139 = and i32 %118, 255
  %140 = or i32 %139, 768
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %141
  %143 = load i32* %142, align 4
  %144 = add i32 %138, %143
  %145 = xor i32 %120, %90
  %146 = xor i32 %145, %144
  %147 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 11
  %148 = load i32* %147, align 4
  %149 = lshr i32 %146, 24
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %150
  %152 = load i32* %151, align 4
  %153 = lshr i32 %146, 16
  %154 = and i32 %153, 255
  %155 = or i32 %154, 256
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %156
  %158 = load i32* %157, align 4
  %159 = add i32 %158, %152
  %160 = lshr i32 %146, 8
  %161 = and i32 %160, 255
  %162 = or i32 %161, 512
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %163
  %165 = load i32* %164, align 4
  %166 = xor i32 %159, %165
  %167 = and i32 %146, 255
  %168 = or i32 %167, 768
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %169
  %171 = load i32* %170, align 4
  %172 = add i32 %166, %171
  %173 = xor i32 %148, %118
  %174 = xor i32 %173, %172
  %175 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 10
  %176 = load i32* %175, align 4
  %177 = lshr i32 %174, 24
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %178
  %180 = load i32* %179, align 4
  %181 = lshr i32 %174, 16
  %182 = and i32 %181, 255
  %183 = or i32 %182, 256
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %184
  %186 = load i32* %185, align 4
  %187 = add i32 %186, %180
  %188 = lshr i32 %174, 8
  %189 = and i32 %188, 255
  %190 = or i32 %189, 512
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %191
  %193 = load i32* %192, align 4
  %194 = xor i32 %187, %193
  %195 = and i32 %174, 255
  %196 = or i32 %195, 768
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %197
  %199 = load i32* %198, align 4
  %200 = add i32 %194, %199
  %201 = xor i32 %176, %146
  %202 = xor i32 %201, %200
  %203 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 9
  %204 = load i32* %203, align 4
  %205 = lshr i32 %202, 24
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %206
  %208 = load i32* %207, align 4
  %209 = lshr i32 %202, 16
  %210 = and i32 %209, 255
  %211 = or i32 %210, 256
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %212
  %214 = load i32* %213, align 4
  %215 = add i32 %214, %208
  %216 = lshr i32 %202, 8
  %217 = and i32 %216, 255
  %218 = or i32 %217, 512
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %219
  %221 = load i32* %220, align 4
  %222 = xor i32 %215, %221
  %223 = and i32 %202, 255
  %224 = or i32 %223, 768
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %225
  %227 = load i32* %226, align 4
  %228 = add i32 %222, %227
  %229 = xor i32 %204, %174
  %230 = xor i32 %229, %228
  %231 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 8
  %232 = load i32* %231, align 4
  %233 = lshr i32 %230, 24
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %234
  %236 = load i32* %235, align 4
  %237 = lshr i32 %230, 16
  %238 = and i32 %237, 255
  %239 = or i32 %238, 256
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %240
  %242 = load i32* %241, align 4
  %243 = add i32 %242, %236
  %244 = lshr i32 %230, 8
  %245 = and i32 %244, 255
  %246 = or i32 %245, 512
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %247
  %249 = load i32* %248, align 4
  %250 = xor i32 %243, %249
  %251 = and i32 %230, 255
  %252 = or i32 %251, 768
  %253 = zext i32 %252 to i64
  %254 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %253
  %255 = load i32* %254, align 4
  %256 = add i32 %250, %255
  %257 = xor i32 %232, %202
  %258 = xor i32 %257, %256
  %259 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 7
  %260 = load i32* %259, align 4
  %261 = lshr i32 %258, 24
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %262
  %264 = load i32* %263, align 4
  %265 = lshr i32 %258, 16
  %266 = and i32 %265, 255
  %267 = or i32 %266, 256
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %268
  %270 = load i32* %269, align 4
  %271 = add i32 %270, %264
  %272 = lshr i32 %258, 8
  %273 = and i32 %272, 255
  %274 = or i32 %273, 512
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %275
  %277 = load i32* %276, align 4
  %278 = xor i32 %271, %277
  %279 = and i32 %258, 255
  %280 = or i32 %279, 768
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %281
  %283 = load i32* %282, align 4
  %284 = add i32 %278, %283
  %285 = xor i32 %260, %230
  %286 = xor i32 %285, %284
  %287 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 6
  %288 = load i32* %287, align 4
  %289 = lshr i32 %286, 24
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %290
  %292 = load i32* %291, align 4
  %293 = lshr i32 %286, 16
  %294 = and i32 %293, 255
  %295 = or i32 %294, 256
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %296
  %298 = load i32* %297, align 4
  %299 = add i32 %298, %292
  %300 = lshr i32 %286, 8
  %301 = and i32 %300, 255
  %302 = or i32 %301, 512
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %303
  %305 = load i32* %304, align 4
  %306 = xor i32 %299, %305
  %307 = and i32 %286, 255
  %308 = or i32 %307, 768
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %309
  %311 = load i32* %310, align 4
  %312 = add i32 %306, %311
  %313 = xor i32 %288, %258
  %314 = xor i32 %313, %312
  %315 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 5
  %316 = load i32* %315, align 4
  %317 = lshr i32 %314, 24
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %318
  %320 = load i32* %319, align 4
  %321 = lshr i32 %314, 16
  %322 = and i32 %321, 255
  %323 = or i32 %322, 256
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %324
  %326 = load i32* %325, align 4
  %327 = add i32 %326, %320
  %328 = lshr i32 %314, 8
  %329 = and i32 %328, 255
  %330 = or i32 %329, 512
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %331
  %333 = load i32* %332, align 4
  %334 = xor i32 %327, %333
  %335 = and i32 %314, 255
  %336 = or i32 %335, 768
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %337
  %339 = load i32* %338, align 4
  %340 = add i32 %334, %339
  %341 = xor i32 %316, %286
  %342 = xor i32 %341, %340
  %343 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 4
  %344 = load i32* %343, align 4
  %345 = lshr i32 %342, 24
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %346
  %348 = load i32* %347, align 4
  %349 = lshr i32 %342, 16
  %350 = and i32 %349, 255
  %351 = or i32 %350, 256
  %352 = zext i32 %351 to i64
  %353 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %352
  %354 = load i32* %353, align 4
  %355 = add i32 %354, %348
  %356 = lshr i32 %342, 8
  %357 = and i32 %356, 255
  %358 = or i32 %357, 512
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %359
  %361 = load i32* %360, align 4
  %362 = xor i32 %355, %361
  %363 = and i32 %342, 255
  %364 = or i32 %363, 768
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %365
  %367 = load i32* %366, align 4
  %368 = add i32 %362, %367
  %369 = xor i32 %344, %314
  %370 = xor i32 %369, %368
  %371 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 3
  %372 = load i32* %371, align 4
  %373 = lshr i32 %370, 24
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %374
  %376 = load i32* %375, align 4
  %377 = lshr i32 %370, 16
  %378 = and i32 %377, 255
  %379 = or i32 %378, 256
  %380 = zext i32 %379 to i64
  %381 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %380
  %382 = load i32* %381, align 4
  %383 = add i32 %382, %376
  %384 = lshr i32 %370, 8
  %385 = and i32 %384, 255
  %386 = or i32 %385, 512
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %387
  %389 = load i32* %388, align 4
  %390 = xor i32 %383, %389
  %391 = and i32 %370, 255
  %392 = or i32 %391, 768
  %393 = zext i32 %392 to i64
  %394 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %393
  %395 = load i32* %394, align 4
  %396 = add i32 %390, %395
  %397 = xor i32 %372, %342
  %398 = xor i32 %397, %396
  %399 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 2
  %400 = load i32* %399, align 4
  %401 = lshr i32 %398, 24
  %402 = zext i32 %401 to i64
  %403 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %402
  %404 = load i32* %403, align 4
  %405 = lshr i32 %398, 16
  %406 = and i32 %405, 255
  %407 = or i32 %406, 256
  %408 = zext i32 %407 to i64
  %409 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %408
  %410 = load i32* %409, align 4
  %411 = add i32 %410, %404
  %412 = lshr i32 %398, 8
  %413 = and i32 %412, 255
  %414 = or i32 %413, 512
  %415 = zext i32 %414 to i64
  %416 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %415
  %417 = load i32* %416, align 4
  %418 = xor i32 %411, %417
  %419 = and i32 %398, 255
  %420 = or i32 %419, 768
  %421 = zext i32 %420 to i64
  %422 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %421
  %423 = load i32* %422, align 4
  %424 = add i32 %418, %423
  %425 = xor i32 %400, %370
  %426 = xor i32 %425, %424
  %427 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 0, i64 1
  %428 = load i32* %427, align 4
  %429 = lshr i32 %426, 24
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %430
  %432 = load i32* %431, align 4
  %433 = lshr i32 %426, 16
  %434 = and i32 %433, 255
  %435 = or i32 %434, 256
  %436 = zext i32 %435 to i64
  %437 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %436
  %438 = load i32* %437, align 4
  %439 = add i32 %438, %432
  %440 = lshr i32 %426, 8
  %441 = and i32 %440, 255
  %442 = or i32 %441, 512
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %443
  %445 = load i32* %444, align 4
  %446 = xor i32 %439, %445
  %447 = and i32 %426, 255
  %448 = or i32 %447, 768
  %449 = zext i32 %448 to i64
  %450 = getelementptr inbounds %struct.BF_KEY* %key, i64 0, i32 1, i64 %449
  %451 = load i32* %450, align 4
  %452 = add i32 %446, %451
  %453 = xor i32 %428, %398
  %454 = xor i32 %453, %452
  %455 = load i32* %0, align 4
  %456 = xor i32 %455, %426
  store i32 %454, i32* %2, align 4
  store i32 %456, i32* %data, align 4
  ret void
}

define void @BF_cbc_encrypt(i8* nocapture %in, i8* nocapture %out, i64 %length, %struct.BF_KEY* %schedule, i8* %ivec, i32 %encrypt) nounwind {
entry:
  %tin = alloca [2 x i32], align 4
  %0 = icmp eq i32 %encrypt, 0
  %1 = load i8* %ivec, align 1
  %2 = zext i8 %1 to i32
  %3 = shl nuw i32 %2, 24
  %4 = getelementptr inbounds i8* %ivec, i64 1
  %5 = load i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw nsw i32 %6, 16
  %8 = getelementptr inbounds i8* %ivec, i64 2
  %9 = load i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = shl nuw nsw i32 %10, 8
  %12 = getelementptr inbounds i8* %ivec, i64 3
  %13 = load i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = or i32 %7, %3
  %16 = or i32 %15, %14
  %17 = or i32 %16, %11
  %18 = getelementptr inbounds i8* %ivec, i64 4
  %19 = load i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw i32 %20, 24
  %22 = getelementptr inbounds i8* %ivec, i64 5
  %23 = load i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 16
  %26 = getelementptr inbounds i8* %ivec, i64 6
  %27 = load i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 8
  %30 = getelementptr inbounds i8* %ivec, i64 7
  %31 = load i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = or i32 %25, %21
  %34 = or i32 %33, %32
  %35 = or i32 %34, %29
  %l.153 = add nsw i64 %length, -8
  %36 = icmp sgt i64 %l.153, -1
  br i1 %0, label %bb20.preheader, label %bb3.preheader

bb20.preheader:                                   ; preds = %entry
  br i1 %36, label %bb18.lr.ph, label %bb21

bb18.lr.ph:                                       ; preds = %bb20.preheader
  %37 = getelementptr inbounds [2 x i32]* %tin, i64 0, i64 0
  %38 = getelementptr inbounds [2 x i32]* %tin, i64 0, i64 1
  %tmp105 = add i64 %length, -16
  br label %bb18

bb3.preheader:                                    ; preds = %entry
  br i1 %36, label %bb1.lr.ph, label %bb4

bb1.lr.ph:                                        ; preds = %bb3.preheader
  %39 = getelementptr inbounds [2 x i32]* %tin, i64 0, i64 0
  %40 = getelementptr inbounds [2 x i32]* %tin, i64 0, i64 1
  %tmp69 = add i64 %length, -16
  br label %bb1

bb1:                                              ; preds = %bb1, %bb1.lr.ph
  %indvar = phi i64 [ 0, %bb1.lr.ph ], [ %indvar.next, %bb1 ]
  %tout0.045 = phi i32 [ %17, %bb1.lr.ph ], [ %71, %bb1 ]
  %tout1.044 = phi i32 [ %35, %bb1.lr.ph ], [ %72, %bb1 ]
  %tmp = mul i64 %indvar, -8
  %l.0 = add i64 %tmp69, %tmp
  %tmp71 = shl i64 %indvar, 3
  %in_addr.047 = getelementptr i8* %in, i64 %tmp71
  %tmp72134 = or i64 %tmp71, 1
  %scevgep = getelementptr i8* %in, i64 %tmp72134
  %tmp73135 = or i64 %tmp71, 2
  %scevgep74 = getelementptr i8* %in, i64 %tmp73135
  %tmp75136 = or i64 %tmp71, 3
  %scevgep76 = getelementptr i8* %in, i64 %tmp75136
  %tmp77137 = or i64 %tmp71, 4
  %scevgep78 = getelementptr i8* %in, i64 %tmp77137
  %tmp79138 = or i64 %tmp71, 5
  %scevgep80 = getelementptr i8* %in, i64 %tmp79138
  %tmp81139 = or i64 %tmp71, 6
  %scevgep82 = getelementptr i8* %in, i64 %tmp81139
  %tmp83140 = or i64 %tmp71, 7
  %scevgep84 = getelementptr i8* %in, i64 %tmp83140
  %tmp85 = add i64 %tmp71, 8
  %out_addr.046 = getelementptr i8* %out, i64 %tmp71
  %scevgep88 = getelementptr i8* %out, i64 %tmp72134
  %scevgep89 = getelementptr i8* %out, i64 %tmp73135
  %scevgep90 = getelementptr i8* %out, i64 %tmp75136
  %scevgep91 = getelementptr i8* %out, i64 %tmp77137
  %scevgep92 = getelementptr i8* %out, i64 %tmp79138
  %scevgep93 = getelementptr i8* %out, i64 %tmp81139
  %scevgep94 = getelementptr i8* %out, i64 %tmp83140
  %41 = load i8* %in_addr.047, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw i32 %42, 24
  %44 = load i8* %scevgep, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 16
  %47 = load i8* %scevgep74, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = load i8* %scevgep76, align 1
  %51 = zext i8 %50 to i32
  %52 = or i32 %46, %43
  %53 = or i32 %52, %51
  %54 = or i32 %53, %49
  %55 = load i8* %scevgep78, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw i32 %56, 24
  %58 = load i8* %scevgep80, align 1
  %59 = zext i8 %58 to i32
  %60 = shl nuw nsw i32 %59, 16
  %61 = load i8* %scevgep82, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 8
  %64 = load i8* %scevgep84, align 1
  %65 = zext i8 %64 to i32
  %66 = or i32 %60, %57
  %67 = or i32 %66, %65
  %68 = or i32 %67, %63
  %69 = xor i32 %54, %tout0.045
  %70 = xor i32 %68, %tout1.044
  store i32 %69, i32* %39, align 4
  store i32 %70, i32* %40, align 4
  call void @BF_encrypt(i32* %39, %struct.BF_KEY* %schedule) nounwind
  %71 = load i32* %39, align 4
  %72 = load i32* %40, align 4
  %73 = lshr i32 %71, 24
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %out_addr.046, align 1
  %75 = lshr i32 %71, 16
  %76 = trunc i32 %75 to i8
  store i8 %76, i8* %scevgep88, align 1
  %77 = lshr i32 %71, 8
  %78 = trunc i32 %77 to i8
  store i8 %78, i8* %scevgep89, align 1
  %79 = trunc i32 %71 to i8
  store i8 %79, i8* %scevgep90, align 1
  %80 = lshr i32 %72, 24
  %81 = trunc i32 %80 to i8
  store i8 %81, i8* %scevgep91, align 1
  %82 = lshr i32 %72, 16
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %scevgep92, align 1
  %84 = lshr i32 %72, 8
  %85 = trunc i32 %84 to i8
  store i8 %85, i8* %scevgep93, align 1
  %86 = trunc i32 %72 to i8
  store i8 %86, i8* %scevgep94, align 1
  %87 = icmp sgt i64 %l.0, -1
  %indvar.next = add i64 %indvar, 1
  br i1 %87, label %bb1, label %bb3.bb4_crit_edge

bb3.bb4_crit_edge:                                ; preds = %bb1
  %l.048 = add i64 %l.153, %tmp
  %scevgep86 = getelementptr i8* %in, i64 %tmp85
  %scevgep95 = getelementptr i8* %out, i64 %tmp85
  br label %bb4

bb4:                                              ; preds = %bb3.bb4_crit_edge, %bb3.preheader
  %in_addr.0.lcssa = phi i8* [ %scevgep86, %bb3.bb4_crit_edge ], [ %in, %bb3.preheader ]
  %out_addr.0.lcssa = phi i8* [ %scevgep95, %bb3.bb4_crit_edge ], [ %out, %bb3.preheader ]
  %l.0.in.lcssa = phi i64 [ %l.048, %bb3.bb4_crit_edge ], [ %length, %bb3.preheader ]
  %tout0.0.lcssa = phi i32 [ %71, %bb3.bb4_crit_edge ], [ %17, %bb3.preheader ]
  %tout1.0.lcssa = phi i32 [ %72, %bb3.bb4_crit_edge ], [ %35, %bb3.preheader ]
  %88 = icmp eq i64 %l.0.in.lcssa, 0
  br i1 %88, label %bb34, label %bb5

bb5:                                              ; preds = %bb4
  %89 = getelementptr inbounds i8* %in_addr.0.lcssa, i64 %l.0.in.lcssa
  switch i64 %l.0.in.lcssa, label %bb14 [
    i64 1, label %bb13
    i64 2, label %bb12
    i64 3, label %bb11
    i64 4, label %bb10
    i64 5, label %bb9
    i64 6, label %bb8
    i64 7, label %bb7
    i64 8, label %bb6
  ]

bb6:                                              ; preds = %bb5
  %.sum35 = add i64 %l.0.in.lcssa, -1
  %90 = getelementptr inbounds i8* %in_addr.0.lcssa, i64 %.sum35
  %91 = load i8* %90, align 1
  %92 = zext i8 %91 to i32
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %tin1.0 = phi i32 [ %92, %bb6 ], [ 0, %bb5 ]
  %in_addr.1 = phi i8* [ %90, %bb6 ], [ %89, %bb5 ]
  %93 = getelementptr inbounds i8* %in_addr.1, i64 -1
  %94 = load i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 8
  %97 = or i32 %96, %tin1.0
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %tin1.1 = phi i32 [ %97, %bb7 ], [ 0, %bb5 ]
  %in_addr.2 = phi i8* [ %93, %bb7 ], [ %89, %bb5 ]
  %98 = getelementptr inbounds i8* %in_addr.2, i64 -1
  %99 = load i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %101, %tin1.1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb5
  %tin1.2 = phi i32 [ %102, %bb8 ], [ 0, %bb5 ]
  %in_addr.3 = phi i8* [ %98, %bb8 ], [ %89, %bb5 ]
  %103 = getelementptr inbounds i8* %in_addr.3, i64 -1
  %104 = load i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = shl nuw i32 %105, 24
  %107 = or i32 %106, %tin1.2
  br label %bb10

bb10:                                             ; preds = %bb9, %bb5
  %tin1.3 = phi i32 [ %107, %bb9 ], [ 0, %bb5 ]
  %in_addr.4 = phi i8* [ %103, %bb9 ], [ %89, %bb5 ]
  %108 = getelementptr inbounds i8* %in_addr.4, i64 -1
  %109 = load i8* %108, align 1
  %110 = zext i8 %109 to i32
  br label %bb11

bb11:                                             ; preds = %bb10, %bb5
  %tin1.4 = phi i32 [ %tin1.3, %bb10 ], [ 0, %bb5 ]
  %tin0.0 = phi i32 [ %110, %bb10 ], [ 0, %bb5 ]
  %in_addr.5 = phi i8* [ %108, %bb10 ], [ %89, %bb5 ]
  %111 = getelementptr inbounds i8* %in_addr.5, i64 -1
  %112 = load i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = shl nuw nsw i32 %113, 8
  %115 = or i32 %114, %tin0.0
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  %tin1.5 = phi i32 [ %tin1.4, %bb11 ], [ 0, %bb5 ]
  %tin0.1 = phi i32 [ %115, %bb11 ], [ 0, %bb5 ]
  %in_addr.6 = phi i8* [ %111, %bb11 ], [ %89, %bb5 ]
  %116 = getelementptr inbounds i8* %in_addr.6, i64 -1
  %117 = load i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = shl nuw nsw i32 %118, 16
  %120 = or i32 %119, %tin0.1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb5
  %tin1.6 = phi i32 [ %tin1.5, %bb12 ], [ 0, %bb5 ]
  %tin0.2 = phi i32 [ %120, %bb12 ], [ 0, %bb5 ]
  %in_addr.7 = phi i8* [ %116, %bb12 ], [ %89, %bb5 ]
  %121 = getelementptr inbounds i8* %in_addr.7, i64 -1
  %122 = load i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = shl nuw i32 %123, 24
  %125 = or i32 %124, %tin0.2
  br label %bb14

bb14:                                             ; preds = %bb13, %bb5
  %tin1.7 = phi i32 [ 0, %bb5 ], [ %tin1.6, %bb13 ]
  %tin0.3 = phi i32 [ 0, %bb5 ], [ %125, %bb13 ]
  %126 = xor i32 %tin0.3, %tout0.0.lcssa
  %127 = xor i32 %tin1.7, %tout1.0.lcssa
  %128 = getelementptr inbounds [2 x i32]* %tin, i64 0, i64 0
  store i32 %126, i32* %128, align 4
  %129 = getelementptr inbounds [2 x i32]* %tin, i64 0, i64 1
  store i32 %127, i32* %129, align 4
  call void @BF_encrypt(i32* %128, %struct.BF_KEY* %schedule) nounwind
  %130 = load i32* %128, align 4
  %131 = load i32* %129, align 4
  %132 = lshr i32 %130, 24
  %133 = trunc i32 %132 to i8
  store i8 %133, i8* %out_addr.0.lcssa, align 1
  %134 = getelementptr inbounds i8* %out_addr.0.lcssa, i64 1
  %135 = lshr i32 %130, 16
  %136 = trunc i32 %135 to i8
  store i8 %136, i8* %134, align 1
  %137 = getelementptr inbounds i8* %out_addr.0.lcssa, i64 2
  %138 = lshr i32 %130, 8
  %139 = trunc i32 %138 to i8
  store i8 %139, i8* %137, align 1
  %140 = getelementptr inbounds i8* %out_addr.0.lcssa, i64 3
  %141 = trunc i32 %130 to i8
  store i8 %141, i8* %140, align 1
  %142 = getelementptr inbounds i8* %out_addr.0.lcssa, i64 4
  %143 = lshr i32 %131, 24
  %144 = trunc i32 %143 to i8
  store i8 %144, i8* %142, align 1
  %145 = getelementptr inbounds i8* %out_addr.0.lcssa, i64 5
  %146 = lshr i32 %131, 16
  %147 = trunc i32 %146 to i8
  store i8 %147, i8* %145, align 1
  %148 = getelementptr inbounds i8* %out_addr.0.lcssa, i64 6
  %149 = lshr i32 %131, 8
  %150 = trunc i32 %149 to i8
  store i8 %150, i8* %148, align 1
  %151 = getelementptr inbounds i8* %out_addr.0.lcssa, i64 7
  %152 = trunc i32 %131 to i8
  store i8 %152, i8* %151, align 1
  br label %bb34

bb18:                                             ; preds = %bb18, %bb18.lr.ph
  %indvar100 = phi i64 [ 0, %bb18.lr.ph ], [ %indvar.next101, %bb18 ]
  %xor1.055 = phi i32 [ %35, %bb18.lr.ph ], [ %180, %bb18 ]
  %xor0.054 = phi i32 [ %17, %bb18.lr.ph ], [ %166, %bb18 ]
  %tmp102 = mul i64 %indvar100, -8
  %l.1 = add i64 %tmp105, %tmp102
  %tmp107 = shl i64 %indvar100, 3
  %in_addr.857 = getelementptr i8* %in, i64 %tmp107
  %tmp109141 = or i64 %tmp107, 1
  %scevgep110 = getelementptr i8* %in, i64 %tmp109141
  %tmp111142 = or i64 %tmp107, 2
  %scevgep112 = getelementptr i8* %in, i64 %tmp111142
  %tmp113143 = or i64 %tmp107, 3
  %scevgep114 = getelementptr i8* %in, i64 %tmp113143
  %tmp115144 = or i64 %tmp107, 4
  %scevgep116 = getelementptr i8* %in, i64 %tmp115144
  %tmp117145 = or i64 %tmp107, 5
  %scevgep118 = getelementptr i8* %in, i64 %tmp117145
  %tmp119146 = or i64 %tmp107, 6
  %scevgep120 = getelementptr i8* %in, i64 %tmp119146
  %tmp121147 = or i64 %tmp107, 7
  %scevgep122 = getelementptr i8* %in, i64 %tmp121147
  %tmp123 = add i64 %tmp107, 8
  %out_addr.156 = getelementptr i8* %out, i64 %tmp107
  %scevgep126 = getelementptr i8* %out, i64 %tmp109141
  %scevgep127 = getelementptr i8* %out, i64 %tmp111142
  %scevgep128 = getelementptr i8* %out, i64 %tmp113143
  %scevgep129 = getelementptr i8* %out, i64 %tmp115144
  %scevgep130 = getelementptr i8* %out, i64 %tmp117145
  %scevgep131 = getelementptr i8* %out, i64 %tmp119146
  %scevgep132 = getelementptr i8* %out, i64 %tmp121147
  %153 = load i8* %in_addr.857, align 1
  %154 = zext i8 %153 to i32
  %155 = shl nuw i32 %154, 24
  %156 = load i8* %scevgep110, align 1
  %157 = zext i8 %156 to i32
  %158 = shl nuw nsw i32 %157, 16
  %159 = load i8* %scevgep112, align 1
  %160 = zext i8 %159 to i32
  %161 = shl nuw nsw i32 %160, 8
  %162 = load i8* %scevgep114, align 1
  %163 = zext i8 %162 to i32
  %164 = or i32 %158, %155
  %165 = or i32 %164, %163
  %166 = or i32 %165, %161
  %167 = load i8* %scevgep116, align 1
  %168 = zext i8 %167 to i32
  %169 = shl nuw i32 %168, 24
  %170 = load i8* %scevgep118, align 1
  %171 = zext i8 %170 to i32
  %172 = shl nuw nsw i32 %171, 16
  %173 = load i8* %scevgep120, align 1
  %174 = zext i8 %173 to i32
  %175 = shl nuw nsw i32 %174, 8
  %176 = load i8* %scevgep122, align 1
  %177 = zext i8 %176 to i32
  %178 = or i32 %172, %169
  %179 = or i32 %178, %177
  %180 = or i32 %179, %175
  store i32 %166, i32* %37, align 4
  store i32 %180, i32* %38, align 4
  call void @BF_decrypt(i32* %37, %struct.BF_KEY* %schedule) nounwind
  %181 = load i32* %37, align 4
  %182 = xor i32 %181, %xor0.054
  %183 = load i32* %38, align 4
  %184 = xor i32 %183, %xor1.055
  %185 = lshr i32 %182, 24
  %186 = trunc i32 %185 to i8
  store i8 %186, i8* %out_addr.156, align 1
  %187 = lshr i32 %182, 16
  %188 = trunc i32 %187 to i8
  store i8 %188, i8* %scevgep126, align 1
  %189 = lshr i32 %182, 8
  %190 = trunc i32 %189 to i8
  store i8 %190, i8* %scevgep127, align 1
  %191 = trunc i32 %182 to i8
  store i8 %191, i8* %scevgep128, align 1
  %192 = lshr i32 %184, 24
  %193 = trunc i32 %192 to i8
  store i8 %193, i8* %scevgep129, align 1
  %194 = lshr i32 %184, 16
  %195 = trunc i32 %194 to i8
  store i8 %195, i8* %scevgep130, align 1
  %196 = lshr i32 %184, 8
  %197 = trunc i32 %196 to i8
  store i8 %197, i8* %scevgep131, align 1
  %198 = trunc i32 %184 to i8
  store i8 %198, i8* %scevgep132, align 1
  %199 = icmp sgt i64 %l.1, -1
  %indvar.next101 = add i64 %indvar100, 1
  br i1 %199, label %bb18, label %bb20.bb21_crit_edge

bb20.bb21_crit_edge:                              ; preds = %bb18
  %l.158 = add i64 %l.153, %tmp102
  %scevgep124 = getelementptr i8* %in, i64 %tmp123
  %scevgep133 = getelementptr i8* %out, i64 %tmp123
  br label %bb21

bb21:                                             ; preds = %bb20.bb21_crit_edge, %bb20.preheader
  %in_addr.8.lcssa = phi i8* [ %scevgep124, %bb20.bb21_crit_edge ], [ %in, %bb20.preheader ]
  %out_addr.1.lcssa = phi i8* [ %scevgep133, %bb20.bb21_crit_edge ], [ %out, %bb20.preheader ]
  %l.1.in.lcssa = phi i64 [ %l.158, %bb20.bb21_crit_edge ], [ %length, %bb20.preheader ]
  %xor1.0.lcssa = phi i32 [ %180, %bb20.bb21_crit_edge ], [ %35, %bb20.preheader ]
  %xor0.0.lcssa = phi i32 [ %166, %bb20.bb21_crit_edge ], [ %17, %bb20.preheader ]
  %200 = icmp eq i64 %l.1.in.lcssa, 0
  br i1 %200, label %bb34, label %bb22

bb22:                                             ; preds = %bb21
  %201 = load i8* %in_addr.8.lcssa, align 1
  %202 = zext i8 %201 to i32
  %203 = shl nuw i32 %202, 24
  %204 = getelementptr inbounds i8* %in_addr.8.lcssa, i64 1
  %205 = load i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = shl nuw nsw i32 %206, 16
  %208 = getelementptr inbounds i8* %in_addr.8.lcssa, i64 2
  %209 = load i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = shl nuw nsw i32 %210, 8
  %212 = getelementptr inbounds i8* %in_addr.8.lcssa, i64 3
  %213 = load i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = or i32 %207, %203
  %216 = or i32 %215, %214
  %217 = or i32 %216, %211
  %218 = getelementptr inbounds i8* %in_addr.8.lcssa, i64 4
  %219 = load i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = shl nuw i32 %220, 24
  %222 = getelementptr inbounds i8* %in_addr.8.lcssa, i64 5
  %223 = load i8* %222, align 1
  %224 = zext i8 %223 to i32
  %225 = shl nuw nsw i32 %224, 16
  %226 = getelementptr inbounds i8* %in_addr.8.lcssa, i64 6
  %227 = load i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = shl nuw nsw i32 %228, 8
  %230 = getelementptr inbounds i8* %in_addr.8.lcssa, i64 7
  %231 = load i8* %230, align 1
  %232 = zext i8 %231 to i32
  %233 = or i32 %225, %221
  %234 = or i32 %233, %232
  %235 = or i32 %234, %229
  %236 = getelementptr inbounds [2 x i32]* %tin, i64 0, i64 0
  store i32 %217, i32* %236, align 4
  %237 = getelementptr inbounds [2 x i32]* %tin, i64 0, i64 1
  store i32 %235, i32* %237, align 4
  call void @BF_decrypt(i32* %236, %struct.BF_KEY* %schedule) nounwind
  %238 = load i32* %236, align 4
  %239 = xor i32 %238, %xor0.0.lcssa
  %240 = load i32* %237, align 4
  %241 = xor i32 %240, %xor1.0.lcssa
  %242 = getelementptr inbounds i8* %out_addr.1.lcssa, i64 %l.1.in.lcssa
  switch i64 %l.1.in.lcssa, label %bb34 [
    i64 1, label %bb31
    i64 2, label %bb30
    i64 3, label %bb29
    i64 4, label %bb28
    i64 5, label %bb27
    i64 6, label %bb26
    i64 7, label %bb25
    i64 8, label %bb24
  ]

bb24:                                             ; preds = %bb22
  %.sum = add i64 %l.1.in.lcssa, -1
  %243 = getelementptr inbounds i8* %out_addr.1.lcssa, i64 %.sum
  %244 = trunc i32 %241 to i8
  store i8 %244, i8* %243, align 1
  br label %bb25

bb25:                                             ; preds = %bb24, %bb22
  %out_addr.2 = phi i8* [ %243, %bb24 ], [ %242, %bb22 ]
  %245 = getelementptr inbounds i8* %out_addr.2, i64 -1
  %246 = lshr i32 %241, 8
  %247 = trunc i32 %246 to i8
  store i8 %247, i8* %245, align 1
  br label %bb26

bb26:                                             ; preds = %bb25, %bb22
  %out_addr.3 = phi i8* [ %245, %bb25 ], [ %242, %bb22 ]
  %248 = getelementptr inbounds i8* %out_addr.3, i64 -1
  %249 = lshr i32 %241, 16
  %250 = trunc i32 %249 to i8
  store i8 %250, i8* %248, align 1
  br label %bb27

bb27:                                             ; preds = %bb26, %bb22
  %out_addr.4 = phi i8* [ %248, %bb26 ], [ %242, %bb22 ]
  %251 = getelementptr inbounds i8* %out_addr.4, i64 -1
  %252 = lshr i32 %241, 24
  %253 = trunc i32 %252 to i8
  store i8 %253, i8* %251, align 1
  br label %bb28

bb28:                                             ; preds = %bb27, %bb22
  %out_addr.5 = phi i8* [ %251, %bb27 ], [ %242, %bb22 ]
  %254 = getelementptr inbounds i8* %out_addr.5, i64 -1
  %255 = trunc i32 %239 to i8
  store i8 %255, i8* %254, align 1
  br label %bb29

bb29:                                             ; preds = %bb28, %bb22
  %out_addr.6 = phi i8* [ %254, %bb28 ], [ %242, %bb22 ]
  %256 = getelementptr inbounds i8* %out_addr.6, i64 -1
  %257 = lshr i32 %239, 8
  %258 = trunc i32 %257 to i8
  store i8 %258, i8* %256, align 1
  br label %bb30

bb30:                                             ; preds = %bb29, %bb22
  %out_addr.7 = phi i8* [ %256, %bb29 ], [ %242, %bb22 ]
  %259 = getelementptr inbounds i8* %out_addr.7, i64 -1
  %260 = lshr i32 %239, 16
  %261 = trunc i32 %260 to i8
  store i8 %261, i8* %259, align 1
  br label %bb31

bb31:                                             ; preds = %bb30, %bb22
  %out_addr.8 = phi i8* [ %259, %bb30 ], [ %242, %bb22 ]
  %262 = getelementptr inbounds i8* %out_addr.8, i64 -1
  %263 = lshr i32 %239, 24
  %264 = trunc i32 %263 to i8
  store i8 %264, i8* %262, align 1
  br label %bb34

bb34:                                             ; preds = %bb31, %bb22, %bb21, %bb14, %bb4
  %storemerge42.in.in = phi i32 [ %130, %bb14 ], [ %tout0.0.lcssa, %bb4 ], [ %xor0.0.lcssa, %bb21 ], [ %217, %bb31 ], [ %217, %bb22 ]
  %storemerge38.in.in = phi i32 [ %131, %bb14 ], [ %tout1.0.lcssa, %bb4 ], [ %xor1.0.lcssa, %bb21 ], [ %235, %bb31 ], [ %235, %bb22 ]
  %storemerge42.in = lshr i32 %storemerge42.in.in, 24
  %storemerge42 = trunc i32 %storemerge42.in to i8
  store i8 %storemerge42, i8* %ivec, align 1
  %storemerge41.in = lshr i32 %storemerge42.in.in, 16
  %storemerge41 = trunc i32 %storemerge41.in to i8
  store i8 %storemerge41, i8* %4, align 1
  %storemerge40.in = lshr i32 %storemerge42.in.in, 8
  %storemerge40 = trunc i32 %storemerge40.in to i8
  store i8 %storemerge40, i8* %8, align 1
  %storemerge39 = trunc i32 %storemerge42.in.in to i8
  store i8 %storemerge39, i8* %12, align 1
  %storemerge38.in = lshr i32 %storemerge38.in.in, 24
  %storemerge38 = trunc i32 %storemerge38.in to i8
  store i8 %storemerge38, i8* %18, align 1
  %storemerge37.in = lshr i32 %storemerge38.in.in, 16
  %storemerge37 = trunc i32 %storemerge37.in to i8
  store i8 %storemerge37, i8* %22, align 1
  %storemerge36.in = lshr i32 %storemerge38.in.in, 8
  %storemerge36 = trunc i32 %storemerge36.in to i8
  store i8 %storemerge36, i8* %26, align 1
  %storemerge = trunc i32 %storemerge38.in.in to i8
  store i8 %storemerge, i8* %30, align 1
  ret void
}

define void @BF_set_key(%struct.BF_KEY* %key, i32 %len, i8* %data) nounwind {
entry:
  %in = alloca [2 x i32], align 4
  %0 = bitcast %struct.BF_KEY* %key to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast (%struct.BF_KEY* @bf_init to i8*), i64 4168, i32 4, i1 false)
  %1 = icmp sgt i32 %len, 72
  %2 = sext i32 %len to i64
  %3 = select i1 %1, i64 72, i64 %2
  %4 = getelementptr inbounds i8* %data, i64 %3
  br label %bb2

bb2:                                              ; preds = %bb2.bb2_crit_edge, %entry
  %5 = phi i32 [ 608135816, %entry ], [ %.pre, %bb2.bb2_crit_edge ]
  %indvar34 = phi i64 [ 0, %entry ], [ %indvar.next35, %bb2.bb2_crit_edge ]
  %d.424 = phi i8* [ %data, %entry ], [ %d.3, %bb2.bb2_crit_edge ]
  %scevgep37 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 %indvar34
  %6 = load i8* %d.424, align 1
  %7 = zext i8 %6 to i32
  %8 = getelementptr inbounds i8* %d.424, i64 1
  %9 = icmp ult i8* %8, %4
  %d.0 = select i1 %9, i8* %8, i8* %data
  %10 = shl nuw nsw i32 %7, 8
  %11 = load i8* %d.0, align 1
  %12 = zext i8 %11 to i32
  %13 = or i32 %12, %10
  %14 = getelementptr inbounds i8* %d.0, i64 1
  %15 = icmp ult i8* %14, %4
  %d.1 = select i1 %15, i8* %14, i8* %data
  %16 = shl nuw nsw i32 %13, 8
  %17 = load i8* %d.1, align 1
  %18 = zext i8 %17 to i32
  %19 = or i32 %16, %18
  %20 = getelementptr inbounds i8* %d.1, i64 1
  %21 = icmp ult i8* %20, %4
  %d.2 = select i1 %21, i8* %20, i8* %data
  %22 = shl nuw i32 %19, 8
  %23 = load i8* %d.2, align 1
  %24 = zext i8 %23 to i32
  %25 = or i32 %22, %24
  %26 = getelementptr inbounds i8* %d.2, i64 1
  %27 = xor i32 %25, %5
  store i32 %27, i32* %scevgep37, align 4
  %indvar.next35 = add i64 %indvar34, 1
  %exitcond36 = icmp eq i64 %indvar.next35, 18
  br i1 %exitcond36, label %bb12, label %bb2.bb2_crit_edge

bb2.bb2_crit_edge:                                ; preds = %bb2
  %28 = icmp ult i8* %26, %4
  %d.3 = select i1 %28, i8* %26, i8* %data
  %scevgep37.phi.trans.insert = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 %indvar.next35
  %.pre = load i32* %scevgep37.phi.trans.insert, align 4
  br label %bb2

bb12:                                             ; preds = %bb2
  %29 = getelementptr inbounds [2 x i32]* %in, i64 0, i64 0
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds [2 x i32]* %in, i64 0, i64 1
  store i32 0, i32* %30, align 4
  %scevgep31 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 0
  %scevgep33 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 1
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %31 = load i32* %29, align 4
  store i32 %31, i32* %scevgep31, align 4
  %32 = load i32* %30, align 4
  store i32 %32, i32* %scevgep33, align 4
  %scevgep31.1 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 2
  %scevgep33.1 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 3
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %33 = load i32* %29, align 4
  store i32 %33, i32* %scevgep31.1, align 4
  %34 = load i32* %30, align 4
  store i32 %34, i32* %scevgep33.1, align 4
  %scevgep31.2 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 4
  %scevgep33.2 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 5
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %35 = load i32* %29, align 4
  store i32 %35, i32* %scevgep31.2, align 4
  %36 = load i32* %30, align 4
  store i32 %36, i32* %scevgep33.2, align 4
  %scevgep31.3 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 6
  %scevgep33.3 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 7
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %37 = load i32* %29, align 4
  store i32 %37, i32* %scevgep31.3, align 4
  %38 = load i32* %30, align 4
  store i32 %38, i32* %scevgep33.3, align 4
  %scevgep31.4 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 8
  %scevgep33.4 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 9
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %39 = load i32* %29, align 4
  store i32 %39, i32* %scevgep31.4, align 4
  %40 = load i32* %30, align 4
  store i32 %40, i32* %scevgep33.4, align 4
  %scevgep31.5 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 10
  %scevgep33.5 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 11
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %41 = load i32* %29, align 4
  store i32 %41, i32* %scevgep31.5, align 4
  %42 = load i32* %30, align 4
  store i32 %42, i32* %scevgep33.5, align 4
  %scevgep31.6 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 12
  %scevgep33.6 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 13
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %43 = load i32* %29, align 4
  store i32 %43, i32* %scevgep31.6, align 4
  %44 = load i32* %30, align 4
  store i32 %44, i32* %scevgep33.6, align 4
  %scevgep31.7 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 14
  %scevgep33.7 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 15
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %45 = load i32* %29, align 4
  store i32 %45, i32* %scevgep31.7, align 4
  %46 = load i32* %30, align 4
  store i32 %46, i32* %scevgep33.7, align 4
  %scevgep31.8 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 16
  %scevgep33.8 = getelementptr %struct.BF_KEY* %key, i64 0, i32 0, i64 17
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %47 = load i32* %29, align 4
  store i32 %47, i32* %scevgep31.8, align 4
  %48 = load i32* %30, align 4
  store i32 %48, i32* %scevgep33.8, align 4
  br label %bb17

bb17:                                             ; preds = %bb17, %bb12
  %indvar = phi i64 [ 0, %bb12 ], [ %indvar.next, %bb17 ]
  %tmp = shl i64 %indvar, 1
  %scevgep = getelementptr %struct.BF_KEY* %key, i64 0, i32 1, i64 %tmp
  %tmp2538 = or i64 %tmp, 1
  %scevgep26 = getelementptr %struct.BF_KEY* %key, i64 0, i32 1, i64 %tmp2538
  call void @BF_encrypt(i32* %29, %struct.BF_KEY* %key) nounwind
  %49 = load i32* %29, align 4
  store i32 %49, i32* %scevgep, align 4
  %50 = load i32* %30, align 4
  store i32 %50, i32* %scevgep26, align 4
  %indvar.next = add i64 %indvar, 1
  %exitcond = icmp eq i64 %indvar.next, 512
  br i1 %exitcond, label %return, label %bb17

return:                                           ; preds = %bb17
  ret void
}

declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind

define i32 @main() nounwind {
entry:
  %key = alloca %struct.BF_KEY, align 8
  %data = alloca [2 x i32], align 4
  %bf_key5 = alloca [16 x i8], align 1
  %bf_key5.sub = getelementptr inbounds [16 x i8]* %bf_key5, i64 0, i64 0
  call void @BF_set_key(%struct.BF_KEY* %key, i32 16, i8* %bf_key5.sub) nounwind
  %0 = getelementptr inbounds [2 x i32]* %data, i64 0, i64 0
  store i32 1112297303, i32* %0, align 4
  %1 = getelementptr inbounds [2 x i32]* %data, i64 0, i64 1
  store i32 1179210568, i32* %1, align 4
  call void @BF_encrypt(i32* %0, %struct.BF_KEY* %key) nounwind
  ret i32 undef
}
